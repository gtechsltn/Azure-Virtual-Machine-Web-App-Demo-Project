1
00:00:05,933 --> 00:00:10,633
Let's get started by finding our project and starting our virtual machine

2
00:00:10,633 --> 00:00:13,799


3
00:00:13,800 --> 00:00:17,566
Open a terminal window in visual studio code

4
00:00:17,566 --> 00:00:20,532
and log into Azure with your credentials

5
00:00:20,533 --> 00:00:21,866


6
00:00:21,866 --> 00:00:28,432
Let's copy the public IP address and use it to secure shell into our virtual machine

7
00:00:28,433 --> 00:00:31,766
Make sure you enter your project administration

8
00:00:31,766 --> 00:00:35,599
username and password that we set up in the previous exercise

9
00:00:35,600 --> 00:00:36,966


10
00:00:36,966 --> 00:00:41,566
Our first step is to update the package and repository information

11
00:00:41,566 --> 00:00:44,966


12
00:00:44,966 --> 00:00:51,999
Or next steps is to install nginx which is our webserver and python which will run our web app

13
00:00:52,000 --> 00:00:53,433


14
00:00:53,433 --> 00:01:01,333
Let's now setup the reverse proxy configuration of our nginx webserver so that our client requests can be handled

15
00:01:01,333 --> 00:01:02,966


16
00:01:02,966 --> 00:01:10,066
Let's open a new terminal window and navigate to the sites available directory and take a peek at what's currently there

17
00:01:10,066 --> 00:01:10,466


18
00:01:10,466 --> 00:01:17,466
As you can see the default file looks very similar to our reverse proxy configuration file

19
00:01:17,466 --> 00:01:17,832


20
00:01:17,833 --> 00:01:25,333
Our next step is to unlink this file from nginx as the preferred reverse proxy configuration

21
00:01:25,333 --> 00:01:26,033


22
00:01:26,033 --> 00:01:29,766
Go ahead and open a new terminal window and login to Azure again

23
00:01:29,766 --> 00:01:32,999
Let's use the secure copy command to copy our

24
00:01:33,000 --> 00:01:37,900
reverse proxy configuration file to our home directory on a virtual machine

25
00:01:37,900 --> 00:01:43,900
Let's switch back to our secure shell terminal window and see our file is now in our home directory

26
00:01:43,900 --> 00:01:50,666
Next I'm going to use the sudo command to move my reverse proxy configuration file to the sites 

27
00:01:50,666 --> 00:01:57,399
available directory and yes you do need to use sudo because it is an elevated permission area

28
00:01:57,400 --> 00:01:58,433
Let's go there now

29
00:01:58,433 --> 00:01:58,833


30
00:01:58,833 --> 00:02:06,033
As you can see our reverse proxy configuration file is now available in this directory. So let's go ahead and link it.

31
00:02:06,033 --> 00:02:13,033
We are going to link it to the nginx server so it will use that as the preferred proxy configuration.

32
00:02:13,033 --> 00:02:13,599


33
00:02:13,600 --> 00:02:18,300
In order to make all this magic work you do need to restart the ngingx service

34
00:02:18,300 --> 00:02:19,066


35
00:02:19,066 --> 00:02:24,099
Ok let's find our IP address and navigate to our website. It's a bad gateway error!

36
00:02:24,100 --> 00:02:29,166
which is mysterious to many people and I'm going to explain how to fix it

37
00:02:29,166 --> 00:02:29,632


38
00:02:29,633 --> 00:02:38,266
Let's take a look at our proxy file and think about what's going on here. It's a listening and wanting to see something...

39
00:02:38,266 --> 00:02:40,366
Let's give a hint! It might be

40
00:02:40,366 --> 00:02:41,799
in the web app directory.

41
00:02:41,800 --> 00:02:42,033


42
00:02:42,033 --> 00:02:48,566
Our last step is to actually start the web app and to do that we are going to use python. So what we are doing now 

43
00:02:48,566 --> 00:02:56,066
is creating the python environment and installing any python dependencies or packages

44
00:02:56,066 --> 00:03:02,166
These package requirements are actually in our web app project if you were to take a look

45
00:03:02,166 --> 00:03:05,332
you would see them listed there and we have to install them.

46
00:03:05,333 --> 00:03:09,066
The last step is to actually run the python application

47
00:03:09,066 --> 00:03:15,866
and if you can see it's now listening on our local host and we refresh our web browser and Voila!

48
00:03:15,866 --> 00:03:22,666
We have a Flask application running on our virtual machine. Congratulations!

49
00:03:22,666 --> 00:03:23,166


50
00:03:23,166 --> 00:03:30,266
Don't forget! After you're done playing with your virtual machine stop it so you don't get charged any more money than you want to

